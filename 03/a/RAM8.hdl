// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    Register(in=in[0..15], load=a, out=aa);
    Register(in=in[0..15], load=b, out=bb);
    Register(in=in[0..15], load=c, out=cc);
    Register(in=in[0..15], load=d, out=dd);
    Register(in=in[0..15], load=e, out=ee);
    Register(in=in[0..15], load=f, out=ff);
    Register(in=in[0..15], load=g, out=gg);
    Register(in=in[0..15], load=h, out=hh);
    DMux8Way(in=load, sel=address[0..2], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    Mux8Way16(a=aa, b=bb, c=cc, d=dd, e=ee, f=ff, g=gg, h=hh, sel=address[0..2], out=out);
}